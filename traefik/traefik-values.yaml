additionalArguments:
#Enable the API in insecure mode, which means that the API will be available directly on the entryPoint named traefik.
    - --api.insecure=true
    - --api.debug=true
    - --api.dashboard=true
# Configure your CertificateResolver here...
# 
# HTTP Challenge
# ---
# Generic Example:
#   - --certificatesresolvers.generic.acme.email=your-email@example.com
#   - --certificatesresolvers.generic.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
#   - --certificatesresolvers.generic.acme.httpChallenge.entryPoint=web
#   - --certificatesresolvers.generic.acme.storage=/ssl-certs/acme-generic.json
#
# Prod / Staging Example:
#   - --certificatesresolvers.staging.acme.email=younes.elarjouni@imbe.fr
#   - --certificatesresolvers.staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
#   - --certificatesresolvers.staging.acme.httpChallenge.entryPoint=web
#   - --certificatesresolvers.staging.acme.storage=/ssl-certs/acme-staging.json
#   - --certificatesresolvers.production.acme.email=your-email@example.com
#   - --certificatesresolvers.production.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
#   - --certificatesresolvers.production.acme.httpChallenge.entryPoint=web
#   - --certificatesresolvers.production.acme.storage=/ssl-certs/acme-production.json
#
# DNS Challenge
# ---
# Cloudflare Example:
#  - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
#  - --certificatesresolvers.cloudflare.acme.email=your-email@example.com
#  - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1
#  - --certificatesresolvers.cloudflare.acme.storage=/ssl-certs/acme-cloudflare.json
#
# Generic (replace with your DNS provider):
#  - --certificatesresolvers.generic.acme.dnschallenge.provider=generic
#  - --certificatesresolvers.generic.acme.email=your-email@example.com
#  - --certificatesresolvers.generic.acme.storage=/ssl-certs/acme-generic.json

logs:
# Configure log settings here...
  general:
    level: DEBUG
ports:
# Configure your entrypoints here...
##In ssh's case, it doesn't work for now
#  ssh:
#    address: ":22"
  traefik:
    address: 172.20.51.17:8080
  web:
    # (optional) Permanent Redirect to HTTPS
    redirectTo: websecure
  websecure:
    tls:
      enabled: false
      # (optional) Set a Default CertResolver
      #certResolver: letsencrypt
  

env:
# Set your environment variables here...
# 
# DNS Challenge Credentials
# ---
# Cloudflare Example:
#   - name: CF_API_EMAIL
#     valueFrom:
#       secretKeyRef:
#         key: email
#         name: cloudflare-credentials
#   - name: CF_API_KEY
#     valueFrom:
#       secretKeyRef:
#         key: apiKey
#         name: cloudflare-credentials

# Disable Dashboard
ingressRoute:
  dashboard:
    enabled: true

# Persistent Storage
#persistence:
#  enabled: true
#  name: ssl-certs
#  size: 1Gi
#  path: /ssl-certs

#deployment:
#  initContainers:
#    # The "volume-permissions" init container is required if you run into permission issues.
#    # Related issue: https://github.com/containous/traefik/issues/6972
#    - name: volume-permissions
#      image: busybox:1.31.1
#      command: ["sh", "-c", "chmod -Rv 600 /ssl-certs/*"]
#      volumeMounts:
#        - name: ssl-certs
#          mountPath: /ssl-certs

# Set Traefik as your default Ingress Controller, according to Kubernetes 1.19+ changes.
ingressClass:
  enabled: true
  isDefaultClass: true